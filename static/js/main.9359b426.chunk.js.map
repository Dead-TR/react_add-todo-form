{"version":3,"sources":["api/users.js","displayTodo/User.js","displayTodo/Todo.js","displayTodo/TodoList.js","newTodo/addElements/AddUser.js","newTodo/addElements/AddTitle.js","newTodo/Form.js","newTodo/NewTodo.js","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","User","props","Todo","completed","title","user","setCompleted","className","type","defaultChecked","onChange","event","toUpperCase","slice","TodoList","list","map","todo","key","AddUser","value","AddTitle","todosTitle","required","maxLength","target","Form","selectUser","saveTodos","onSubmit","defaultValue","disabled","Fragment","NewTodo","state","userId","setState","Number","find","person","getId","length","preventDefault","addToList","form","this","React","Component","App","prev","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9359b426.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const User = props => (\n  <sub>{props.name}</sub>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { User } from './User';\n\nconst Todo = ({ completed, title, user, setCompleted, id }) => (\n  <li className=\"list\">\n    <div>\n      <input\n        type=\"checkbox\"\n        defaultChecked={completed}\n        onChange={event => setCompleted(event, id)}\n      />\n      <span className=\"text\">\n        {title[0].toUpperCase() + title.slice(1)}\n      </span>\n    </div>\n    <User {...user} />\n  </li>\n);\n\nexport { Todo };\n\nTodo.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  setCompleted: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from './Todo';\n\nexport const TodoList = ({ list, setCompleted }) => (\n  <ul>\n    {[...list].map(todo => (\n      <Todo\n        key={todo.id}\n        {...todo}\n        setCompleted={setCompleted}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  setCompleted: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddUser = ({ id, name }) => (\n  <option\n    value={id}\n  >\n    {name}\n  </option>\n);\n\nAddUser.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddTitle = ({ todosTitle }) => (\n  <input\n    required\n    maxLength={100}\n    type=\"text\"\n    onChange={event => todosTitle(event.target.value)}\n  />\n);\n\nAddTitle.propTypes = {\n  todosTitle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AddUser } from './addElements/AddUser';\nimport { AddTitle } from './addElements/AddTitle';\n\nconst Form = (props) => {\n  const { selectUser, users, todosTitle, saveTodos } = props;\n\n  return (\n    <form onSubmit={saveTodos}>\n      <h1>Add Todo:</h1>\n\n      <select\n        onChange={selectUser}\n        required\n        defaultValue=\"\"\n      >\n        <option value=\"\" disabled=\"disabled\">Select a user</option>\n\n        {users.map(user => (\n          <React.Fragment key={user.id}>\n            <AddUser {...user} />\n          </React.Fragment>\n        ))}\n      </select>\n\n      <AddTitle\n        todosTitle={todosTitle()}\n      />\n\n      <button\n        type=\"submit\"\n      >\n        Save\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  getId: PropTypes.func.isRequired,\n  todosTitle: PropTypes.func.isRequired,\n  saveTodos: PropTypes.func.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport users from '../api/users';\nimport Form from './Form';\n\nexport class NewTodo extends React.Component {\n  state = {\n    userId: 0,\n    title: '',\n    id: 0,\n    user: '',\n  }\n\n  selectUser = (event) => {\n    this.setState({\n      userId: Number(event.target.value),\n      user: users.find(\n        person => (\n          person.id === Number(event.target.value)\n        ),\n      ),\n    });\n  }\n\n  todosTitle = (title) => {\n    this.setState({ title });\n  }\n\n  getId = () => {\n    this.setState({\n      id: this.props.list.length + 1,\n    });\n  }\n\n  saveTodos = (event) => {\n    event.preventDefault();\n    this.getId();\n    this.props.addToList(\n      this.state.id,\n      this.state.userId,\n      this.state.title,\n      this.state.user,\n    );\n\n    const form = [...event.target];\n\n    form[0].value = '';\n    form[1].value = '';\n  }\n\n  render() {\n    return (\n      <section>\n        <Form\n          selectUser={event => this.selectUser(event)}\n          users={this.props.users}\n          todosTitle={() => this.todosTitle}\n          getId={event => this.getId(event)}\n          saveTodos={event => this.saveTodos(event)}\n        />\n      </section>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addToList: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport './App.css';\n\nimport users from './api/users';\nimport { TodoList } from './displayTodo/TodoList';\nimport { NewTodo } from './newTodo/NewTodo';\n\nclass App extends React.Component {\n  state={\n    list: [],\n  }\n\n  setCompleted = (id) => {\n    this.setState(prev => ({\n      list: prev.list.map((element) => {\n        if (element.id === id) {\n          return (\n            {\n              ...element,\n              completed: !element.completed,\n            }\n          );\n        }\n\n        return element;\n      }),\n    }));\n  };\n\n  addToList = (id, userId, title, user) => {\n    this.setState(prev => ({\n      list: [\n        ...prev.list,\n        {\n          title,\n          id,\n          userId,\n          user,\n          completed: false,\n        },\n      ],\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Static list of todos</h1>\n        <p>\n          <span>Todos: </span>\n          {this.state.list.length}\n        </p>\n\n        <p>\n          <span>Users: </span>\n          {users.length}\n        </p>\n        <NewTodo\n          users={users}\n          list={this.state.list}\n          addToList={this.addToList}\n        />\n        <TodoList\n          setCompleted={this.setCompleted}\n          list={this.state.list}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}